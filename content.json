{"meta":{"title":"SIML","subtitle":"SIML's Challenge","description":"완전초보 IT습득기","author":"SIML","url":"https://siml-seo.github.io"},"pages":[],"posts":[{"title":"5주차","slug":"5주차","date":"2018-02-04T10:47:08.000Z","updated":"2018-02-04T11:10:15.136Z","comments":true,"path":"2018/02/04/5주차/","link":"","permalink":"https://siml-seo.github.io/2018/02/04/5주차/","excerpt":"","text":"개인과제를 시작했기에 쪼갤 시간이 부족했습니다. ‘생활코딩JS’ 공부한 시간 : 4시간새롭게 알게된 사실ObjectModel = JS로 제어가능한 대상BOM = Browser Object Model, 웹페이지 내용 제외한 브라우저 각종 요소 객체화BOM = alert(경고창), confirm(확인창), propmt(입력창),location(브라우저 문서 주소), navigator(브라우저 자체 정보)DOM = Document Object Model, 웹 페이지 내용 제어,document.getElementsByTagName 등등HTMLElement = .getElementById(HTMLElement),.getElementsByTagName(HTMLElementCollection(유사배열)) 등의 메소드 통해 조회한 객체의 리턴 값jQuery = 기본형 ($(선택자).css(‘sytle’, ‘옵션’)),중복형 ($(#active).css(‘color’,’red’).css(‘textDecoration’ , ‘underline’)), 배열형 $(li[i]).css(~) JS경험치 : 2 X 4 = 8 + 32 = 40exp","categories":[{"name":"2018/02","slug":"2018-02","permalink":"https://siml-seo.github.io/categories/2018-02/"}],"tags":[{"name":"JS","slug":"JS","permalink":"https://siml-seo.github.io/tags/JS/"}]},{"title":"4주차","slug":"4주차","date":"2018-01-28T11:04:36.000Z","updated":"2018-01-28T13:49:19.053Z","comments":true,"path":"2018/01/28/4주차/","link":"","permalink":"https://siml-seo.github.io/2018/01/28/4주차/","excerpt":"","text":"최강한파에 따른 감기로 골골대는 일주일이었습니다. ‘HTMLCSS입문’ 공부한 시간 : 6시간새롭게 알게된 사실스타일 속성 = 위치(position, float, overflow)IE 보완 방법 = ie9.js, css3 pie..부트스트랩 프레임워크 HTMLCSS 경험치 : 2 X 6 = 12 + 22 = 34exp, 새로운 프레임워크를 맛 봤습니다. ‘생활코딩JS’ 공부한 시간 : 5시간새롭게 알게된 사실상속 = prototype원시 데이터 타입, 레퍼 객체 = 복제, 참조레퍼 호출 = (function($){$()})(jquery)이벤트 = onclick, onchange, onkeydown, .querySelector JS경험치 : 2 X 5 = 10 + 22 = 32exp ‘네트워크원리’ 공부한 시간 : 4시간새롭게 알게된 사실IP헤더 = 플래그(패킷 조각 가능 유무), 프래그먼트오프셋(IP메시지 중 이 패킷의 위치), 프로토콜 번호, 송수신 IP주소MAC헤더 = 송수신 MAC주소, 이더타입(‘=.프로토콜 번호)ARP = 전브로드캐스트에 해당 IP주소 색인 질의를 던져 MAC주소 반환받음리피터허브 = 모두에게 신호, 스위칭허브(現) = 대상 기기에만 신호LAN어댑터 = 디지털데이터 → 전기, 빛프리앰블 = 1, 0의 비트열 파형설정(타이밍)스타트 프레임딜리미터 = 끝자리 11의 비트패턴, 패킷 개시 위치로 간주클록 = 10 비트형 구분을 위한 별도 신호, 보통 데이터신호와 클록신호 합쳐 보내고, 거기서 원래 데이터 신호만 추출FCS = 데이터변형 검출위한 비트열반이중 모드 = 리피터 허브 사용. 타 신호 조사, 없을 시에만 전송. 충돌 시 재밍신호 흘려 송신 동작 멈춘 후 재시도인터럽트 = PC가 실행중인 작업에 끼어들어 LAN어댑터 쪽으로 주의 환기시켜 데이터 처리로 전환리어셈블링 = 프래그먼트 오프셋을 확인하여 분할된 패킷 모두 도착하면 패킷을 원래 모습으로 되돌리는 동작UDP = 제어용 짧은 데이터, 음성 및 동영상 데이터트위스트 페어 케이블(꼰 선쌍) = PHY(MAU) 회로의 + - 신호 보호를 위해 잡음 억제. 기기 누설전자파가 나선으로 꼰 선과 만날 시 전류 흐르는 방향이 반대가 되어 서로 상쇄. 인접 신호선 누설 전자파(크로스토크)가 꼬는 간격이 다른 + - 신호와 만나 잡음 영향 반대되어 균형이 잡힘MDI/MDI-X = 전환 스위치. 커넥터와 신호 송수신회로를 직접 결선하거나 교차하여 결선하는 것 네트워크 경험치 : 2 X 4 = 8 + 12 = 20exp, 허브 라우터 파트로 넘어가는 중이라 나름 수월합니다.","categories":[{"name":"2018/01","slug":"2018-01","permalink":"https://siml-seo.github.io/categories/2018-01/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"https://siml-seo.github.io/tags/CSS/"},{"name":"JS","slug":"JS","permalink":"https://siml-seo.github.io/tags/JS/"},{"name":"네트워크","slug":"네트워크","permalink":"https://siml-seo.github.io/tags/네트워크/"}]},{"title":"3주차","slug":"3주차","date":"2018-01-21T08:07:25.000Z","updated":"2018-01-21T10:39:27.062Z","comments":true,"path":"2018/01/21/3주차/","link":"","permalink":"https://siml-seo.github.io/2018/01/21/3주차/","excerpt":"","text":"무난한 일주일이었습니다.발표를 생각해 개인과제를 관리프로그램으로 선회해야할 것 같습니다. ‘HTMLCSS입문’ 공부한 시간 : 7시간새롭게 알게된 사실CSS 선택자 = id, class, 속성(input), 후손, 자손, 동위(애니메이션), 상태(아코디언), 구조(li, 자손) 링크, 부정, 사용자지정속성(data-)스타일 속성 = 크기, 색상, url, 가시(display), 박스(margin,padding), 테두리(border), 배경(attachment), 폰트 HTMLCSS 경험치 : 2 X 7 = 14 + 8 = 22exp, 기본기가 쌓이고 있습니다. ‘칸JS’ + ‘생활코딩JS’ 공부한 시간 : 6시간새롭게 알게된 사실모듈(작업 환경요소 변환한 작은 로직) vs 라이브러리(모듈 같은 로직의 집합. 대표적 jQuery)정규표현식 = 특정 조건의 문자 검색, 치환(주로 url?)클로저 = 내외부함수 존재시 내부함수 소멸까지 외부함수 지역변수 존재arguments = 함수 호출시 입력된 인자 담길 은닉된 유사배열.apply = this와 함께 사용해 여러 객체에 사용할 수 있는 공용함수 정의하여 활용전역객체 = 모든 객체는 전역객체(window.)의 프로퍼티생성자 = JS의 객체를 만드는 주체는 함수변환 = 적용 필드의 변환(좌표이동, 회전, 확대 등) (translate, rotate, scale, pushMatrix, popMatrix) JS경험치 : 2 X 6 = 12 + 10 = 22exp,칸JS가 너무 지엽적이라, 3D 애니메이션 차트부터 생활코딩JS로 넘어갔습니다.","categories":[{"name":"2018/01","slug":"2018-01","permalink":"https://siml-seo.github.io/categories/2018-01/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"https://siml-seo.github.io/tags/CSS/"},{"name":"JS","slug":"JS","permalink":"https://siml-seo.github.io/tags/JS/"}]},{"title":"2주차","slug":"2주차","date":"2018-01-14T08:53:44.000Z","updated":"2018-01-14T10:37:45.885Z","comments":true,"path":"2018/01/14/2주차/","link":"","permalink":"https://siml-seo.github.io/2018/01/14/2주차/","excerpt":"","text":"자바를 이용한 개인과제로 뭐가 좋을 지에 대한 고민이 많은 한 주였습니다.현재로서는 자바를 이용한 슈팅게임이 가장 무난해보입니다.갤러그와 비슷한 형태가 되지 않을까 싶습니다. ‘네트워크원리’ 공부한 시간 : 4시간새롭게 알게된 사실DNS서버에서 IP 일치 조회에 이용하는 것은 이름, 클래스(현재는 IN), 타입도메인 명은 계층구조(오른쪽이 상위)루트 도메인은 모든 DNS서버에 등록, 1번째 DNS → 루트 도메인 → 점차 왼쪽 도메인이 등록된 DNS서버로 이동캐시에 등록되어있으면 순차이동X 바로이동OData 송수신 1)소켓(Data 출입구)작성 = 소켓라이브러리의 socket호출, 디스크립터 생성(소켓일련번호) 2)소켓끼리 파이프연결 = 소켓라이브러리의 connect 호출(디스크립터, 서버IP, 포트번호 입력) 3)Data 송수신 = 소켓라이브러리의 write, read 호출 4)파이프분리, 소켓말소 = 소켓 라이브러리의 close 호출OS 내의 프로토콜 스택 내에 TCP, UDP, IP(ICMP(패킷운반통지, ARP(MAC주소조사))라이브러리가 소켓 생성 의뢰시 프로토콜 스택은 소켓 한개 분량의 메모리 확보(디스크립터 주소)송수신 실행시 프로토콜 스택이 데이터 일시저장할 공간인 버퍼 메모리 확보데이터저장 패킷 구성 = 이더넷, IP, TCP 제어정보 헤더, 데이터 조각제어정보 = 송수신 포트번호, 시퀀스번호(데이터 패킷 모을 시의 일련번호), ACK번호(수신처에 도달한 패킷의 총량(일련번호)), 컨트롤비트(잘 전달시 1)MTU = 패킷 운반 가능 데이터 최대 길이 MSS = 데이터 최대 길이타임아웃값(ACK번호 도착까지 대기시간), 낭비이니 연속해서 패킷 보냄.수신 가능 최대 데이터 양 = 윈도우사이즈. 빈 영역 생기면 윈도우 통지.허브 = 이더넷 규칙 = MAC헤더 = 패킷 운반라우터 = IP 규칙 = IP헤더 = 목적지확인 네트워크 경험치 : 2 X 4 = 8 + 4 = 12exp, 아직 흐름이 완전한 건 아닌 것 같습니다. ‘칸JS’ 공부한 시간 : 4시간새롭게 알게된 사실배열 = [], .push오브젝트 = {}(키:값의 나열), .prototype상속 = Creature.call(this, ), Object.creat() JS 경험치 : 2 X 4 = 8 + 2 = 10exp, 배열 등이 나오면서 과제가 점차 어려워지기 시작했습니다.","categories":[{"name":"2018/01","slug":"2018-01","permalink":"https://siml-seo.github.io/categories/2018-01/"}],"tags":[{"name":"JS","slug":"JS","permalink":"https://siml-seo.github.io/tags/JS/"},{"name":"네트워크","slug":"네트워크","permalink":"https://siml-seo.github.io/tags/네트워크/"}]},{"title":"1주차","slug":"1주차","date":"2018-01-07T06:41:35.000Z","updated":"2018-01-14T09:13:46.441Z","comments":true,"path":"2018/01/07/1주차/","link":"","permalink":"https://siml-seo.github.io/2018/01/07/1주차/","excerpt":"","text":"작심일일이라 부끄러운 한 주였습니다.친구와의 저녁약속, 컨디션 난조 등으로 생각만큼 진도를 나가지 못했습니다. ‘성공과 실패를 결정하는 1% 네트워크 원리’(이하 네트워크원리) 공부한 시간 : 2시간새롭게 알게된 사실URL 끝 / 뒤에는 index.html 등이 생략리퀘스트라인(HTTP 포맷 첫째 행) = [메소드] [URI] [버전]메소드 = 동작요구URI = 액세스 대상스테이터스라인(응답메시지 첫째 행) = [버전] [스테이터스코드] [응답문구]스테이터스 코드 = 실행결과 상태 표시응답문구 = 실행결과 알림메시지 본문에 영상 등의 태그가 있으면 빈칸표시, 이후 URI부분에 영상 파일 이름 쓴 리퀘스트 메시지 재차전달의 반복IP 아닌 도메인으로 직접 연결 안하는 이유 = IP 4바이트, 도메인 최대 255바이트. 비효율Socket 라이브러리 = 네트워크 기능 호출 위한 프로그램 부품집리졸버 = DNS서버에 IP주소 확인(네임 리졸루션(resolution)), 소켓 라이브러리 내에 포함.리졸버 호출 방법 = 리졸버 프로그램명(“도메인명”)리졸버에는 송수신 기능이 없으므로 송신 동작은 OS 내부 포함된 ‘프로토콜 스택’ 호출 User → URL → 웹브라우저 → HTTP 리퀘스트 메시지 → 리졸버 호출 → Socket 라이브러리 → 리졸버 → 프로토콜 스택 네트워크 경험치 : 2 X 2 = 4exp, 새롭게 알게 된 내용이 많았습니다. ‘자바 웹 프로그래밍 Next Step’ (이하 자바웹) 경험치가 부족하여 아직 읽을 수가 없었습니다.HTML, CSS, JS, JAVA, String, DB 기초를 쌓은 다음에 도전이 가능할 듯합니다. 자바웹 경험치 : 0exp ‘모던 웹 디자인을 위한 HTML5 + CSS3 입문’(이하 HTMLCSS입문) 공부한 시간 : 8시간새롭게 알게된 사실루비 문자 = 후리가나정의 목록 = dl 태그비디오, 오디오 태그 = 브라우저 호환성 문제에 따른 source 태그video.js 플러그인 = 비디오 호환성 해결 위한 플러그인트랙 태그 = 자막폼 필드를 하나로 묶는 태그 = fieldset공간 분할 태그 = div, span시멘틱 구조 = 이름을 지정해 div 대체 HTMLCSS 경험치 : 1 X 8 = 8exp, JSP 수업에서 배운 내용이 많았습니다. ‘Khanacademy.org 의 Intro to JS’(이하 칸JS) 공부한 시간 : 2시간새롭게 알게된 사실도형 태그 = ellipse, rect, line그림 태그 = fill, stroke,nofill, nostroke, strokeweight텍스트 태그 = text, textsize변수, 함수 = var Varialbes, function(), draw마우스 태그 = mouseXY 특이사항 : 한 챕터 끝나고 자기주도학습으로 주어지는 과제가 있습니다.음식그리기 과제였는데, 대충해서 제출했다가 지적을 당해 다시 그려야했습니다. JS 경험치 : 1 X 2 = 2exp, 아직 기초부분이었습니다.","categories":[{"name":"2018/01","slug":"2018-01","permalink":"https://siml-seo.github.io/categories/2018-01/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"https://siml-seo.github.io/tags/CSS/"},{"name":"JS","slug":"JS","permalink":"https://siml-seo.github.io/tags/JS/"},{"name":"네트워크","slug":"네트워크","permalink":"https://siml-seo.github.io/tags/네트워크/"},{"name":"HTML","slug":"HTML","permalink":"https://siml-seo.github.io/tags/HTML/"}]},{"title":"블로그 알림문","slug":"test","date":"2017-12-31T09:16:25.000Z","updated":"2018-01-01T09:49:12.511Z","comments":true,"path":"2017/12/31/test/","link":"","permalink":"https://siml-seo.github.io/2017/12/31/test/","excerpt":"","text":"이 블로그는 비전공자(어문전공)로서 IT에 입문한 백수의 성장 상황을 기록하기 위한 블로그입니다. 현 포스팅 기준 능력상황 JAVA : 1개월 수강(3 X 20 = 60시간)JSP : 1개월 수강(3 X 20 = 60시간)네트워크 기초 : 1개월 수강(3 X 20 = 60시간)리눅스 : 2개월 수강(3 X 40 = 120시간)C언어 : 1개월 수강(2 X 20 = 40시간)Python : 1개월 수강(3 X 20 = 60시간) 기타 능력 전무 앞으로 개인공부를 하며 배워나간 것들 혹은, 배움상황을 기록하여 이를 경험치화하여 나갈 것입니다. 마지막에 가서는 이 것들을 이용하여 그래프(캔들)로 만들 예정입니다.","categories":[],"tags":[]}]}